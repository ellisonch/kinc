configuration 
<t>
	<state type="map"> </state>
	<k type="computation"> </k>
</t>

rule 
	<k> X:id => I ~> K </k> 
	<state> X |-> Y </state>

rule
	<k> div(I1:int, I2:int) => #divInt(I1, I2) ~> K </k>
	when #notEqInt(I2, I2)

rule <k> plus(I1:int, I2:int) => #plusInt(I1, I2) ~> K </k>
rule <k> lte(I1:int, I2:int) => #lteInt(I1, I2) ~> K </k>
rule <k> not(B:bool) => #not(B) ~> K </k>
rule <k> and(#true(), B:bool) => B ~> K </k>
rule <k> and(#false(), Any) => #false() ~> K </k>
