configuration
	<k type="computation"> $PGM </k>

syntax
	s : int
	zero : int

// rule <k> times(X:listk) => timesHelper(X) </k>
// rule <k> var(H, T:listk) => var(T) </k>

// rule <k> foo(plus(s(N), M:int) => plus(N, s(M))) </k>
// rule <k> foo(plus(zero(), N) => N) </k>

// rule <k> (plus(s(N), M:int) => plus(N, s(M))) </k>
// rule <k> (plus(zero(), N) => N) </k>


// rule <k> (s => z)(X:listk) </k>


// rule <k> foo((a() => (b(), c()))) </k>

// rule <k> (var(H, T:listk) => var(T)) </k>
// rule <k> var(H, (T:listk => .listk) => var(T) </k>


// rule <k> holder(plus(N, plus(A, B))) => holder(plus(A, B), plus_hole2(N)) </k>

// rule <k> z((a() => b())) </k>
// rule <k> z((a() => (b(), c()))) </k>

// rule <k> (test3(a(), b(), c(), d(), e(), f()) => test3()) </k>
// rule <k> (test4(((a(), T:listk) => b()))) </k>
// rule <k> (test6() => a()), (test7() => b()) </k>


// rule <k> (test2(a(), b(), T:listk) => (a(), T)) </k>
// rule <k> test5(a(), b(), ((c(), d()) => (g(), h())), e(), f()) </k>
// rule <k> test9(), ((test8(), L:listk) => a()) </k>
// rule <k> (empty(T:listk) => T) </k>
// rule <k> test10(((a(), b(), c()) => d())) </k>
// rule <k> test11(((a(), e(), f(), g()) => (b(), c(), d())), h(), i()) </k>

// rule <k> label03() ~> (a() => b()) ~> ('LV => q)() </k>

rule <k> label01((q => z)(X:listk)) </k> // broken

// rule <k> plus(N, plus(A, B)) => (plus(A, B) ~> plus_hole2(N)) </k>

// rule <k> a => (b ~> c) </k>
// rule <k> a => kra(b, c) </k>
// rule <k> (a ~> 'kra(X)) => kra(b, c, X) </k>

// rule <k> ('a => 'b)(X) </k>
// rule <k> 'a(X => b) </k>
